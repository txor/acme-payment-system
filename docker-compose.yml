version: "2"

networks:
  kafka-net:
    driver: bridge

services:

  payment-dispatcher-offline:
    image: payment-dispatcher:0.0.1-SNAPSHOT
    networks:
      - kafka-net
    # Expose the debugging port
    #ports:
      #- 8011:8000
    environment:
      - PAYMENTDISPATCHER_KAFKA_SERVERS=kafka-server:9092
      - PAYMENTDISPATCHER_KAFKA_GROUP=offline-group
      - PAYMENTDISPATCHER_KAFKA_TOPIC=offline
      - PAYMENTDISPATCHER_UPDATE_HOST=payment-updater
      - PAYMENTDISPATCHER_UPDATE_PORT=8080
    depends_on:
      - kafka-server
      - payment-updater
    # Enable debugging into the container
    #entrypoint: [ "java","-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=n","-Djava.security.egd=file:/dev/./urandom","-jar","payment-dispatcher.jar" ]

  payment-dispatcher-online:
    image: payment-dispatcher:0.0.1-SNAPSHOT
    networks:
      - kafka-net
    # Expose the debugging port
    #ports:
      #- 8012:8000
    environment:
      - PAYMENTDISPATCHER_KAFKA_SERVERS=kafka-server:9092
      - PAYMENTDISPATCHER_KAFKA_GROUP=online-group
      - PAYMENTDISPATCHER_KAFKA_TOPIC=online
      - PAYMENTDISPATCHER_UPDATE_HOST=payment-checker
      - PAYMENTDISPATCHER_UPDATE_PORT=8080
    depends_on:
      - kafka-server
      - payment-checker
    # Enable debugging into the container
    #entrypoint: [ "java","-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=n","-Djava.security.egd=file:/dev/./urandom","-jar","payment-dispatcher.jar" ]

  payment-checker:
    image: payment-checker:0.0.1-SNAPSHOT
    networks:
      - kafka-net
    # Expose the debugging port
    #ports:
      #- 8013:8000
    environment:
      - PAYMENTCHECKER_CHECK_HOST=api-producer
      - PAYMENTCHECKER_CHECK_PORT=8080
      - PAYMENTCHECKER_UPDATE_HOST=payment-updater
      - PAYMENTCHECKER_UPDATE_PORT=8080
    depends_on:
      - api-producer
      - payment-updater
    # Enable debugging into the container
    #entrypoint: [ "java","-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=n","-Djava.security.egd=file:/dev/./urandom","-jar","payment-checker.jar" ]

  payment-updater:
    image: payment-updater:0.0.1-SNAPSHOT
    networks:
      - kafka-net
    # Expose the debugging port
    #ports:
      #- 8014:8000
    environment:
      - PAYMENTUPDATER_DB_URL=jdbc:postgresql://postgress:5432/payments
      - PAYMENTUPDATER_DB_USERNAME=tech
      - PAYMENTUPDATER_DB_PASSWORD=test
    depends_on:
      - postgress
    # Enable debugging into the container
    #entrypoint: [ "java","-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=n","-Djava.security.egd=file:/dev/./urandom","-jar","payment-updater.jar" ]

  zookeeper-server:
    image: bitnami/zookeeper:latest
    networks:
      - kafka-net
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka-server:
    image: bitnami/kafka:latest
    networks:
      - kafka-net
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-server:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-server:9092,PLAINTEXT_HOST://localhost:29092
    depends_on:
      - zookeeper-server

  postgress:
    image: postgres
    ports:
      - 5432:5432
    volumes:
      - ./Database/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
      - ./Database/accounts.sql:/docker-entrypoint-initdb.d/2-accounts.sql
      - ./Database/custom.sql:/docker-entrypoint-initdb.d/3-custom.sql
    networks:
      - kafka-net
    environment:
      POSTGRES_USER: tech
      POSTGRES_PASSWORD: test
      POSTGRES_DB: payments

  api-producer:
    build: ./ApiAndProducer
    ports:
      - 9000:8080
    networks:
      - kafka-net
    volumes:
      - ./ApiAndProducer/bin:/app/
    command:
      [
          "./wait-for-it.sh",
          "postgress:5432",
          "kafka-server:9092",
          "-t",
          "100",
          "--",
          "java",
          "-jar",
          "app.jar",
      ]
    depends_on:
      - postgress
      - kafka-server
